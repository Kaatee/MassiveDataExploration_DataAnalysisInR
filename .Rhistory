rep(c(0, 1, 2), times = 10)
rep(c(0, 1, 2), each = 10)
library(swirl.pl)
swirl()
exit
exit()
library(swirl.pl)
swirl()
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4, 5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <-my_vector
?matrix
my_matrix <-matrix(1:20, 4,5)
my_matrix2 <-matrix(1:20, 4,5)
my_matrix2 <- matrix(1:20, 4,5)
my_matrix2 <- matrix(data =1:20, nrow=4,ncol=5)
my_matrix2 <- matrix(data = 1:20, nrow = 4, ncol = 5)
my_matrix2 <- matrix(1:20, 4, 5)
my_matrix2
my_matrix2 <- matrix(1:20, 4, 5)
info()
skip()
my_matrix2 <- matrix(1:20, nrow=4, ncol=5)
skip()
my_matrix2 <- matrix(1:20, nrow=4, ncol=5)
View(my_matrix2)
View(my_matrix2)
View(my_matrix2)
my_matrix2 <- matrix(1:20, nrow=4, ncol=5)
identical(my_matrix, my_matrix2)
patients <- c("Domarad", "Lubomira", "Drogostan", "Uniegosta")
cbind(patients, my_matrix)
my_data <- data.frame(patients, my_matrix)
my_data
class(my_data)
cnames <- c("pacjent", "wiek", "waga", "MCV", "MCH", "MCHC")
colnames(my_data) <- cnames
my_data
TRUE & c(TRUE, FALSE, FALSE)
TRUE && c(TRUE, FALSE,  FALSE)
TRUE | c(TRUE, FALSE, FALSE)
TRUE || c(TRUE, FALSE, FALSE)
isTRUE(6 > 4)
identical('foo', 'foo')
xor(5 == 6, !FALSE)
ints <- sample(10)
ints
ints>5
which(ints >7)
any(ints < 0)
all(ints >0)
Sys.Date()
mean(c(2,4,5))
submit()
boring_function('Moja pierwsza funkcja!')
boring_function
submit()
my_mean
my_mean(c(4, 5, 10))
submit()
submit()
submit()
remainder
remainder(5)
remainder(11,5)
remainder(divisor = 11, num = 5)
remainder(4, div = 2)
args(remainder)
submit()
evaluate
evaluate(sd(), c(1.4, 3.6, 7.9, 8.8))
evaluate(sd, c(1.4, 3.6, 7.9, 8.8))
evaluate(function(x){x+1}, 6)
evaluate(function(x){x[1]}, c(8,4,0))
evaluate(function(x){x[length(x)]}, c(8,4,0))
?paste
paste("R", "jest", "gites!")
submit()
telegram
telegram("a", "b")
submit()
submit()
mad_libs
mad_libs(place = "x", adjective = "y", noun="z")
submit()
"Ja" %p% "uwielbiam" %p% "Cię!"
library(swirl.pl)
swirl()
swirl()
head(flags)
dim(flags)
class(flags)
cls_list <- lapply(flags, class)
cls_list
class(cls_list)
as.character(cls_list)
cls_vect <- sapply(flags, class)
class(cls_vect)
sum(flags$orange)
flag_colors <- flags[, 11:17]
head(flag_colors)
lapply(flag_colors, sum)
sapply(flag_colors, sum)
sapply(flag_colors, mean)
flag_shapes <- flags[,19:23]
lapply(flag_shapes, lapply)
lapply(flag_shapes, range)
sapply(flag_shapes, range)
shape_mat <- sapply(flag_shapes, range)
shape_mat
class(shape_mat)
unique(c(3, 4, 5, 5, 5, 6, 6))
lapply(flags, unique)
unique_vals <- lapply(flags, unique)
unique_vals
lapply(unique_vals, length)
sapply(unique_vals, length)
sapply(flags, unique)
lapply(unique_vals, function(elem) elem[2])
sapply(flags, unique)
vapply(flags, unique, numeric(1))
ok()
sapply(flags, class)
vapply(flags, class, character(1))
?tapply
table(flags$landmass)
table(flags$animate)
tapply(flags$animate, flags$landmass, mean)
tapply(flags$population, flags$red, summary)
tapply(flags$population, flags$landmass, summary)
switl()
swirl()
ls()
class(plants)
dim(plants)
nrow(plants)
ncol(plants)
object.size(plants)
names(plants)
head(plants)
head(plants, 10)
tail(plants, 15)
summary(plants)
table(plants$Active_Growth_Period)
str(plants)
?sample
sample(1:6, 4,  replace = TRUE)
sample(1:6, 4,  replace = TRUE)
sample(1:20, 10)
LETTERS
sample(LETTERS)
sample(c(0,1)), 100,prob=c(0.3, 0.7) )
sample(c(0,1), 100, prob=c(0.3, 0.7) )
sample(c(0,1), 100, prob=c(0.3, 0.7) , replace=TRUE)
sample(c(0,1), 100, replace = TRUE, prob = c(0.3, 0.7))
flips <- sample(c(0,1), 100, replace = TRUE, prob = c(0.3, 0.7))
flips
sum(flips)
?rbinom
rbinom(1, size = 100, prob = 0.7)
flips2 <- rbinom(1, size = 100, prob = 0.7)
flips2 <- rbinom(100, size = 1, prob = 0.7)
flips2
sum(flips2)
?rnorm
nnorm(10)
rnorm(10)
rnorm(10, 100,25)
?rpois
rpois(5, 10)
my_pois <- replicate(100, rpois(5, 10))
my_pois
cm <-colMeans(my_pois)
hist(cm)
d1 <- Sys.Date()
class(d1)
unclass(d1)
d1
d1 <- as.Date("1969-01-01")
d2 <- as.Date("1969-01-01")
unclass(d2)
t1 <- Sys.time()
t1
class(t1)
unclass(t1)
t2 <- as.POSIXlt(Sys.time())
class(t2)
t2
unclass(t2)
str(unclass(t2))
t2$min
weekdays()
weekdays(d1)
months(d1)
months(t1)
quarters(t2)
t3 <- "listopad 17, 1986 08:24"
t4 <- strptime(t3, "%B %d, %Y %H:%M")
t4
class(t4)
Sys.time() > t1
Sys.time() - t1
difftime(Sys.time(), t1, units = 'days')
v <- c(1,2,3)
v
v <- c(a,b,c)
v <- c("a", "b", "c", "d","e", "f")
v
v2 <- v[4:]
v2 <- v[4:length(v)]
v2
x <- data.frame(v,v)
x
t <- c(v,v)
t
dim(t) <- c(2,length(v))
t
?rpois
b <-rpois(500, 5)
b2 <-rpois(50, 5)
b2
data.frame(c(v.v), c(2,6))
data.frame(c(v,v), c(2,6))
data.frame(c(v,v))
rbind(v,v)
swirl()
library(swirl.pl)
swirl()
v<-c(0,1,2,3)
v
sum(v>0)
sum(v==0)
sum(v>0) == 0
sum(v>-1) == 4
?norm
?rnorm
plec <- c("M","M","M","K","K","K")
wiek <- rnorm(6,25)
wiek
wiek <- qnorm(6,25)
wiek <-round( rnorm(6,25))
wiek
data.frame(plec, wiek)
data.frame(plec, wiek, wiek)
install.packages("rmarkdown")
//TODO: wstawić datę wygenerowania
TODO: wstawić datę wygenerowania
format(Sys.Date(), "%Y-%B-%d")
date <- read.table("C:\Users\Kasia\Desktop\EMS_proj1\sledzie.csv")
date <- read.table("C:\\Users\\Kasia\\Desktop\\EMS_proj1\\sledzie.csv")
head(data)
date <- read.table("C:\\Users\\Kasia\\Desktop\\EMS_proj1\\sledzie.csv", sep=",")
head(data)
data <- read.table("C:\\Users\\Kasia\\Desktop\\EMS_proj1\\sledzie.csv", sep=",")
head(data)
typeof(data)
data2 <- data.frame(data2)
data2 <- data.frame(data)
typeof(data2)
head(data2)
Wczytane dane
"xx"
"Wczytane dane zawierają " + length(data) + " rekordów oraz " + length(data[1]) + " kolumn"
"Wczytane dane zawierają "  length(data)  rekordów oraz " + length(data[1]) + " kolumn"
"Wczytane dane zawierają "  length(data)
"Wczytane dane zawierają " + length(data) + " rekordów oraz " + length(data[1]) + " kolumn"
paste("Wczytane dane zawierają " , length(data) , " rekordów oraz " + length(data[1]) , " kolumn")
paste(c("Wczytane dane zawierają " , length(data) , " rekordów oraz " + length(data[1]) , " kolumn"), sep=" ")
paste(c("Wczytane dane zawierają " , length(data) , " rekordów oraz " , length(data[1]) , " kolumn"), sep=" ")
paste("Wczytane dane zawierają " , length(data) , " rekordów oraz " , length(data[1]) , " kolumn", sep=" ")
head(data)
sapply(data, sum("?"))
sapply(data, sum(?))
sapply(data, class)
sapply(data, >0)
head(data[chel2])
head(data["chel2"])
data <- read.table("C:\\Users\\Kasia\\Desktop\\EMS_proj1\\sledzie.csv", sep=",", check.names = TRUE)
head(data["chel2"])
head(data[chel2])
sapply(data, class)
head(data)
data <- read.table("C:\\Users\\Kasia\\Desktop\\EMS_proj1\\sledzie.csv", sep=",", check.names = TRUE)
head(data)
data <- read.table("C:\\Users\\Kasia\\Desktop\\EMS_proj1\\sledzie.csv", sep=",", col.names = 1)
data <- read.table("C:\\Users\\Kasia\\Desktop\\EMS_proj1\\sledzie.csv", sep=",", col.names = "v")
data <- read.table("C:\\Users\\Kasia\\Desktop\\EMS_proj1\\sledzie.csv", sep=",", row.names = 1, col.names = "v")
data <- read.table("C:\\Users\\Kasia\\Desktop\\EMS_proj1\\sledzie.csv", header=TRUE sep=",", row.names = 1, col.names = "v")
data <- read.table("C:\\Users\\Kasia\\Desktop\\EMS_proj1\\sledzie.csv", header=TRUE ,sep=",")
head(data)
data[cfin1]
data.cfin1
data["cfin1"]
sum(data[!is.na(data)])
sapply(data, function(x) sum(is.NA(x)))
sapply(data, function(x) sum(is.na(x)))
is.na(data["chel2",2])
lapply(data, function(x) sum(is.na(x)))
sapply(data, function(x) sum(is.na(x)))
is.na(data["chel2",2])
sapply(data, function(x) sum(is.na(x)))
sapply(data, function(x) sum(is.na(x)))
is.na(data["chel2"])
sapply(data, function(x) sum(is.na(x.value)))
sapply(data, function(x) sum(is.na(x[2])))
sapply(data, function(x) sum(is.na(x[2])))
data["chel2",2]
?head
data["chel2",2]
data["chel2",2]
summary(data)
sapply(data, isNa)
data[data<0]
data[data<0 && data!=NA]
data[data<0 && !is.na(data)]
data[data < 0 && !is.na(data)]
sapply(data, class)
sapply(data, class)
plot(missingData[1], missingData[2])
dim(missingData)
missingData <- sapply(data, function(x) sum(is.na(x)))
dim(missingData)
colnames(missingData)
names
c(names)
nrow(missingData)
nrow(missingData)
nrow(missingData)
missingData <- lapply(data, function(x) sum(is.na(x)))
missingData
colnames(missingData)
colnames(missingData)
class(missingData)
class(missingData)
names(missingData)
values
values <- unlist(missingData)
values
missingData
install.packages("plotly")
class(missingData)
missingData
class(missingData)
c(1:4)
install.packages("corrplot")
corrplot(na.omit(data), method = "square", type = "upper", tl.col = "black", tl.srt = 45)
library(corrplot)
corrplot(na.omit(data), type = "upper", tl.col = "black", tl.srt = 45)
corrplot(na.omit(data[,c(1:4)]), type = "upper", tl.col = "black", tl.srt = 45)
corrplot(na.omit(data[,1]), type = "upper", tl.col = "black", tl.srt = 45)
corrplot(na.omit(data[,c(1)]), type = "upper", tl.col = "black", tl.srt = 45)
corrplot(na.omit(data), type = "upper", tl.col = "black", tl.srt = 45)
corrplot(na.omit(data[chlr1]), type = "upper", tl.col = "black", tl.srt = 45)
corrplot(na.omit(data[cfin1]), type = "upper", tl.col = "black", tl.srt = 45)
corrplot(na.omit(data), type = "upper", tl.col = "black", tl.srt = 45)
corrplot(na.omit(data[length, cumf ]), type = "upper", tl.col = "black", tl.srt = 45)
corrplot(na.omit(data), type = "upper", tl.col = "black", tl.srt = 45)
corrplot((na.omit(data)).corr, type = "upper", tl.col = "black", tl.srt = 45)
corrplot((na.omit(data)).cor, type = "upper", tl.col = "black", tl.srt = 45)
corrplot(data.cor, type = "upper", tl.col = "black", tl.srt = 45)
corrplot(res, type = "upper", tl.col = "black", tl.srt = 45)
res <- cor(na.omit(data)) #//TODO - ogarnac brakujace wartosci w danych
res <- cor(na.omit(data)) #//TODO - ogarnac brakujace wartosci w danych
res <- cor(na.omit(data)) #//TODO - ogarnac brakujace wartosci w danych
# Zmiana rozmiaru śledzia w czasie
plot(data[length], data[X])
plot(data$length, data$X)
plot(data$X, data$length)
head(data)
plot(data$X, data$length)
library(ggplot2)
library(ggplot2)
install.packages("gganimate")
p <- ggplot(
data,
aes(x = X, y=length)
) +
geom_point(show.legend = FALSE, alpha = 0.7) +
scale_color_viridis_d() +
scale_size(range = c(2, 12)) +
scale_x_log10() +
labs(x = "Czas połowu", y = "Dlugosc sledzia")
p
install.packages(gifski)
install_github("r-rust/gifski")
install.packages('gifski')
install.packages('png')
p <- ggplot(
na.omit(data), #ogarnąć brakujące dane
aes(X, length)
) +
geom_line() +
scale_color_viridis_d() +
labs(x = "Kolejne połowy", y = "Dlugosc sledzia") +
theme(legend.position = "none")
p
p <- ggplot(
na.omit(data), #ogarnąć brakujące dane
aes(X, length, group = xmonth, color = factor(xmonth))
) +
geom_line() +
scale_color_viridis_d() +
labs(x = "Kolejne połowy", y = "Dlugosc sledzia") +
theme(legend.position = "top")
p
p + transition_reveal(X)
# Wykorzystane biblioteki
Do analizy danych i stworzenia raportu z tej analizy zostały wykorzystane następujące biblioteki:
-- datasets
corrplot
ggplot2
gganimate
dplyr
ggplot(daat, aes(x=xmonth)) + geom_histogram(binwidth=.5)
ggplot(data, aes(x=xmonth)) + geom_histogram(binwidth=.5)
ggplot(data, aes(x=xmonth)) + geom_histogram(binwidth=1)
ggplot(data, aes(x=xmonth)) + geom_histogram(binwidth=1.0)
ggplot(data, aes(x=xmonth)) + geom_histogram(binwidth=1.0, colour="black", fill="white")
lengthDissPlot <- ggplot(data, aes(x=length)) + geom_histogram(binwidth=.5, colour="black", fill="white")
cfin1DissPlot <- ggplot(data, aes(x=cfin1)) + geom_histogram(binwidth=.5, colour="black", fill="white")
cfin2DissPlot <- ggplot(data, aes(x=cfin2)) + geom_histogram(binwidth=.5, colour="black", fill="white")
chel1DissPlot <- ggplot(data, aes(x=chel1)) + geom_histogram(binwidth=.5, colour="black", fill="white")
chel2DissPlot <- ggplot(data, aes(x=chel2)) + geom_histogram(binwidth=.5, colour="black", fill="white")
lcop1DissPlot <- ggplot(data, aes(x=lcop1)) + geom_histogram(binwidth=.5, colour="black", fill="white")
lcop2DissPlot <- ggplot(data, aes(x=lcop2)) + geom_histogram(binwidth=.5, colour="black", fill="white")
fbarDissPlot <- ggplot(data, aes(x=fbar)) + geom_histogram(binwidth=.5, colour="black", fill="white")
recrDissPlot <- ggplot(data, aes(x=recr)) + geom_histogram(binwidth=.5, colour="black", fill="white")
cumfDissPlot <- ggplot(data, aes(x=cumf)) + geom_histogram(binwidth=.5, colour="black", fill="white")
totalnDissPlot <- ggplot(data, aes(x=totaln)) + geom_histogram(binwidth=.5, colour="black", fill="white")
sstDissPlot <- ggplot(data, aes(x=sst)) + geom_histogram(binwidth=.5, colour="black", fill="white")
salDissPlot <- ggplot(data, aes(x=sal)) + geom_histogram(binwidth=.5, colour="black", fill="white")
xmonthDissPlot <- ggplot(data, aes(x=xmonth)) + geom_histogram(binwidth=1.0, colour="black", fill="white")
naoDissPlot <- ggplot(data, aes(x=nao)) + geom_histogram(binwidth=.5, colour="black", fill="white")
grid.arrange(lengthDissPlot,cfin1DissPlot,cfin2DissPlot ,chel1DissPlot ,chel2DissPlot,lcop1DissPlot,lcop2DissPlot ,fbarDissPlot ,
recrDissPlot ,cumfDissPlot ,totalnDissPlot ,sstDissPlot ,salDissPlot ,xmonthDissPlot ,naoDissPlot, nrow = 4, ncol=4)
install.packages('gridExtra')
grid.arrange(lengthDissPlot,cfin1DissPlot,cfin2DissPlot ,chel1DissPlot ,chel2DissPlot,lcop1DissPlot,lcop2DissPlot ,fbarDissPlot ,
recrDissPlot ,cumfDissPlot ,totalnDissPlot ,sstDissPlot ,salDissPlot ,xmonthDissPlot ,naoDissPlot, nrow = 4, ncol=4)
require(gridExtra)
grid.arrange(lengthDissPlot,cfin1DissPlot,cfin2DissPlot ,chel1DissPlot ,chel2DissPlot,lcop1DissPlot,lcop2DissPlot ,fbarDissPlot ,
recrDissPlot ,cumfDissPlot ,totalnDissPlot ,sstDissPlot ,salDissPlot ,xmonthDissPlot ,naoDissPlot, nrow = 4, ncol=4)
lengthDissPlot <- ggplot(na.omit(data), aes(x=length)) + geom_histogram(binwidth=.5, colour="black", fill="white")
cfin1DissPlot <- ggplot(na.omit(data), aes(x=cfin1)) + geom_histogram(binwidth=.5, colour="black", fill="white")
cfin2DissPlot <- ggplot(na.omit(data), aes(x=cfin2)) + geom_histogram(binwidth=.5, colour="black", fill="white")
chel1DissPlot <- ggplot(na.omit(data), aes(x=chel1)) + geom_histogram(binwidth=.5, colour="black", fill="white")
chel2DissPlot <- ggplot(na.omit(data), aes(x=chel2)) + geom_histogram(binwidth=.5, colour="black", fill="white")
lcop1DissPlot <- ggplot(na.omit(data), aes(x=lcop1)) + geom_histogram(binwidth=.5, colour="black", fill="white")
lcop2DissPlot <- ggplot(na.omit(data), aes(x=lcop2)) + geom_histogram(binwidth=.5, colour="black", fill="white")
fbarDissPlot <- ggplot(na.omit(data), aes(x=fbar)) + geom_histogram(binwidth=.5, colour="black", fill="white")
cumfDissPlot <- ggplot(na.omit(data), aes(x=cumf)) + geom_histogram(binwidth=.5, colour="black", fill="white")
totalnDissPlot <- ggplot(na.omit(data), aes(x=totaln)) + geom_histogram(binwidth=.5, colour="black", fill="white")
sstDissPlot <- ggplot(na.omit(data), aes(x=sst)) + geom_histogram(binwidth=.5, colour="black", fill="white")
salDissPlot <- ggplot(na.omit(data), aes(x=sal)) + geom_histogram(binwidth=.5, colour="black", fill="white")
xmonthDissPlot <- ggplot(na.omit(data), aes(x=xmonth)) + geom_histogram(binwidth=1.0, colour="black", fill="white")
naoDissPlot <- ggplot(na.omit(data), aes(x=nao)) + geom_histogram(binwidth=.5, colour="black", fill="white")
require(gridExtra)
grid.arrange(lengthDissPlot,cfin1DissPlot,cfin2DissPlot ,chel1DissPlot ,chel2DissPlot,lcop1DissPlot,lcop2DissPlot ,fbarDissPlot ,
recrDissPlot ,cumfDissPlot ,totalnDissPlot ,sstDissPlot ,salDissPlot ,xmonthDissPlot ,naoDissPlot, nrow = 4, ncol=4)
lengthDissPlot
cfin1DissPlot
cfin1DissPlot <- ggplot(na.omit(data), aes(x=cfin1),stat="count") + geom_histogram(binwidth=.5, colour="black", fill="white")
cfin1DissPlot
cfin1DissPlot <- ggplot(na.omit(data), aes(x=cfin1)) + geom_histogram(binwidth=.5, colour="black", fill="white",stat="count")
cfin1DissPlot
cfin2DissPlot <- ggplot(na.omit(data), aes(x=cfin2)) + geom_histogram(binwidth=.5, colour="black", fill="white")
cfin2DissPlot
cfin2DissPlot <- ggplot(na.omit(data), aes(x=cfin2)) + geom_histogram(binwidth=.5, colour="black", fill="white",stat="count")
cfin2DissPlot
cfin1DissPlot <- ggplot(na.omit(data), aes(x=cfin1)) + geom_histogram(binwidth=1, colour="black", fill="white",stat="count")
cfin1DissPlot
cfin2DissPlot <- ggplot(na.omit(data), aes(x=cfin2)) + geom_histogram(binwidth=1, colour="black", fill="white",stat="count")
cfin2DissPlot
chel1DissPlot <- ggplot(na.omit(data), aes(x=chel1)) + geom_histogram(binwidth=.5, colour="black", fill="white")
chel1DissPlot
chel1DissPlot <- ggplot(na.omit(data), aes(x=chel1)) + geom_histogram(binwidth=.5, colour="black", fill="white",stat="count")
chel1DissPlot
chel2DissPlot <- ggplot(na.omit(data), aes(x=chel2)) + geom_histogram(binwidth=.5, colour="black", fill="white")
chel2DissPlot
chel2DissPlot <- ggplot(na.omit(data), aes(x=chel2)) + geom_histogram(binwidth=.5, colour="black", fill="white",stat="count")
chel2DissPlot
lcop1DissPlot <- ggplot(na.omit(data), aes(x=lcop1)) + geom_histogram(binwidth=.5, colour="black", fill="white")
lcop1DissPlot
lcop1DissPlot <- ggplot(na.omit(data), aes(x=lcop1)) + geom_histogram(binwidth=.5, colour="black", fill="white",stat="count")
lcop1DissPlot
lcop2DissPlot <- ggplot(na.omit(data), aes(x=lcop2)) + geom_histogram(binwidth=.5, colour="black", fill="white")
lcop2DissPlot
lcop2DissPlot <- ggplot(na.omit(data), aes(x=lcop2)) + geom_histogram(binwidth=.5, colour="black", fill="white",stat="count")
lcop2DissPlot <- ggplot(na.omit(data), aes(x=lcop2)) + geom_histogram(binwidth=.5, colour="black", fill="white",stat="count")
lcop2DissPlot <- ggplot(na.omit(data), aes(x=lcop2)) + geom_histogram(binwidth=.5, colour="black", fill="white",stat="count")
lcop2DissPlot <- ggplot(na.omit(data), aes(x=lcop2)) + geom_histogram(binwidth=.5, colour="black", fill="white")
lcop2DissPlot
lcop2DissPlot <- ggplot(na.omit(data), aes(x=lcop2)) + geom_histogram(binwidth=.5, colour="black", fill="white",stat="count")
lcop2DissPlot
fbarDissPlot <- ggplot(na.omit(data), aes(x=fbar)) + geom_histogram(binwidth=.5, colour="black", fill="white")
fbarDissPlot
fbarDissPlot <- ggplot(na.omit(data), aes(x=fbar)) + geom_histogram(binwidth=.1, colour="black", fill="white")
fbarDissPlot
fbarDissPlot <- ggplot(na.omit(data), aes(x=fbar)) + geom_histogram(binwidth=.05, colour="black", fill="white")
fbarDissPlot
recrDissPlot <- ggplot(na.omit(data), aes(x=recr)) + geom_histogram(binwidth=.5, colour="black", fill="white")
recrDissPlot
recrDissPlot <- ggplot(na.omit(data), aes(x=recr)) + geom_histogram(binwidth=1.0, colour="black", fill="white")
recrDissPlot
recrDissPlot <- ggplot(na.omit(data), aes(x=recr)) + geom_histogram(binwidth=2.0, colour="black", fill="white")
recrDissPlot
